---
title: "Jordan and Zoe E155 Final Project"
listing:
  contents:
  - "homepage.qmd"
  - "documentation.qmd"
  - "fpga.qmd"
  - "mcu.qmd"
  - "results.qmd"
  - "team.qmd"
type: grid
---

## Brief

Welcome to **MicroP(ictionary)**!

This design project sought to create a Pictionary device that would allow users to draw whatever color they see fit on a screen.

## Abstract

MicroP(ictionary) is a game for lab students that want to play online, but have to play using hardware instead. The goal of this project was to make a Pictionary game with the following specs:

> 7 Buttons to control 7 different colors

> A potentiometer to control the thickness of the brush being used

> A brush up/down switch that controls whether the brush is drawing or not

> A joystick to control where we are on the board.

The project had two separate pieces; the MCU that collects and stores the current status of the brush (including color, thickness, and location), and the FPGA, which has an onboard RAM that stores the color left behind by the brush or simply shows the user their current location. The brush will always be orange. The MCU consistently sends SPI updates of the location of the user to the FPGA board, and the FPGA board then outputs this data onto the computer screen. When the user updates the colors of the board or decides to put the brush down, the system sends an additional SPI package with the updated color and brush up/down information.

This program was extremely close to working, but likely due to a high level of power flux, the board connection between the MCU and the FPGA has been shorted. The MCU can be connected to via JLink separate from the board, but when it is plugged into the board, JLink can no longer connect.

Prior to this issue, the device was able to draw x/y locations, as well as travel in a controlled manner about the screen.

A video prior to this was not captured demonstrating how the brush was able to travel about the screen and leave a trail: this video, however, displays how the brush's current color was being captured and making it over to the VGA device, and how control of whether the color was changed via the brush up/down switch was changed.

{{< video https://www.youtube.com/watch?v=NjBG17eC-Dw&feature=youtu.be >}}

The overview of this system can be seen in @fig-overview.

:::{#fig-overview}
![](images/block_digaram.png)

This is the block diagram of what the system looks like from top down. Note that there are a large number of pins going into the MCU
:::


