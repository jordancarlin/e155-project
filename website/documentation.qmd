---
title: "Documentation"
---

MicroPictionary built upon the FPGA design and MCU programming skills learned throughout E155 and added several key new hardware components. For the MCU, the main new functionality was the use of analog input pins for the joystick and potentiometer that controls the brush thickness. The joystick that we chose outputs an analog voltage for x and y on two different pins. Each of these need to be read into the MCU using the onboard ADCs and then filtered to give us usable data to determine the desired position for the brush. The same idea applied for the potentiometer.

The other significant new hardware component was the VGA monitor. This required lots of new components of the FPGA. First of all, the PLL was needed to generate the clock signal to produce the hsync and vsync signals for the monitor. This also required the use of a much larger RAM (an SPRAM in this case) to store the color data for each pixel. This RAM in particular was the source of many of our troubles throughout this project.

For more details on the hardware, see the [MCU](./mcu) and [FPGA](./fpga) pages. These include schematics and block diagrams. The [Github repository](https://github.com/jordancarlin/e155-project) contains all of the source code for the project.

This project has a relatively low barrier of entry from a hardware perspective. If you are working from a well stocked lab, the only parts that are not likely present the joystick and a VGA breadboard adapter. The full Bill of Materials is below:

![](images/bom.png)
